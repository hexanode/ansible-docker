---

#####################################
# Default variables for docker role #
#####################################

role_docker: false

# Docker options
docker_edition: 'ce'                                    # Default is 'ce' for Community Edition, set 'ee' for Entreprise Edition
docker_package: "docker-{{ docker_edition }}"           # Default is the latest version, set docker-{{ docker_edition }}-<VERSION>" for a specific version
docker_apt_release_channel: 'stable'                    # Default is take packages from Stable channel, set 'edge' for edge channel
docker_apt_repository: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"

# Docker Compose options
docker_compose_install: true                            # Set to false in order to uninstall docker compose
docker_compose_version: '1.25.5'                        # Docker-compose version
docker_compose_path: '/usr/local/bin/docker-compose'    # Update it for a custom docker-compose path

# Docker firewall options
docker_disable_iptables_management: false               # Set to true in order to disable iptables rules management by docker
docker_firewall_primary_if: 'eth0'                      # Set the default primary interface (with wan connection), or override rules_var

# Docker firewall rules variable designed to become a fact
docker_firewall_rules_var:
  - { chain: 'FORWARD',  in_if: '{{ docker_firewall_primary_if }}', out_if: 'docker0', policy: 'ACCEPT' }
  - { chain: 'FORWARD',  out_if: '{{ docker_firewall_primary_if }}', in_if: 'docker0', policy: 'ACCEPT' }
  - { table: 'nat', chain: 'POSTROUTING', out_if: '{{ docker_firewall_primary_if }}', policy: 'MASQUERADE', comment: 'Allow containers to access the internet' }

# Docker Crons
docker_cron_disable: false
docker_cronfile_path: /etc/cron.d/ansible_docker
docker_crons_list:
  - name: prune_docker
    job: "/usr/bin/docker system prune -f"
    hour: "8"
    minute: "30"
    weekday: "2-7"
    user: "root"
  - name: prune_docker_all
    job: "/usr/bin/docker system prune -f -a"
    hour: "8"
    minute: "30"
    weekday: "1"
    user: "root"
